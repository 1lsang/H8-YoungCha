name: be-cd

on:
  pull_request:
    branches:
      - dev/be

permissions:
  contents: read

env:
  DOCKER_COMPOSE_FILE: docker-compose.yml

defaults:
  run:
    working-directory: server

jobs:
#  push-docker-image:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#
#      # image 이름 붙여넣기
#      - name: Set ${{ env.DOCKER_COMPOSE_FILE }}
#        uses: microsoft/variable-substitution@v1
#        with:
#          files: ${{ github.workspace }}/server/${{ env.DOCKER_COMPOSE_FILE }}
#        env:
#          services.spring1.image: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
#          services.spring2.image: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
#
#      - name: Create secret file
#        run: |
#          mkdir src/main/resources/secrets
#          echo "${{ secrets.APPLICATION_ENV }}" > src/main/resources/secrets/application-env.yml
#
#      - name: Build with Gradle
#        run: ./gradlew clean bootJar
#
#      - name: Docker build and push
#        run: |
#          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} .
#          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

  deploy:
#    needs: [ push-docker-image ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy docker compose & Scripts
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: '${{ github.workspace }}/server/${{ env.DOCKER_COMPOSE_FILE }},${{ github.workspace }}/server/script'
          target: 'server'

      - name: Deploy to dev
        uses: appleboy/ssh-action@master
        id: deploy-dev
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            chmod +x ./script/*.sh
            
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            
            ./script/deploy.sh ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_REPO }} ${{ env.DOCKER_COMPOSE_FILE }}
            
            docker image prune -f
            docker logout
            
            ./script/health.sh ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_REPO }} ${{ env.DOCKER_COMPOSE_FILE }}
            
            # nginx 전환에 실패하면 workflow 종료
            if [ "$?" -ge 1 ]
            then
              exit 1
            fi